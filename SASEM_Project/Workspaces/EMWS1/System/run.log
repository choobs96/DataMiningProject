NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
16067      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16068      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16069      put '<Node Id="FIMPORT" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Update" Pid="" Gridid=""/>';
16070      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

16071      %let emloopmode =;
*------------------------------------------------------------* 
* 
* FIMPORT : Beginning update before running 
* datetime : 01DEC2019:16:11:16 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16273      %let emexceptionString =;
16274      %let EMEXCEPTIONSTRING=;
16275      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16276      * UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   * UPDATE: FIMPORT;
16277      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16278      %let EM_ACTION = UPDATE;
16279      %let syscc = 0;
16280      /* Fimport.source */
16281      %macro main;
16282            %if %upcase(&EM_ACTION) = CREATE %then %do;
16283               filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16284               %include temp;
16285               filename temp;
16286               %create;
16287            %end;
16288            %else
16289            %if %upcase(&EM_ACTION) = TRAIN %then %do;
16290               filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16291               %include temp;
16292               filename temp;
16293               %train;
16294            %end;
16295            %else
16296            %if %upcase(&EM_ACTION) = UPDATE %then %do;
16297               filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16298               %include temp;
16299               filename temp;
16300               %update;
16301            %end;
16302            %else
16303            %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16304               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16305               %include temp;
16306               filename temp;
16307               %property;
16308            %end;
16309             %else
16310            %if %upcase(&EM_ACTION) = SCORE %then %do;
16311               filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16312               %include temp;
16313               filename temp;
16314               %score;
16315            %end;
16316            %else
16317            %if %upcase(&EM_ACTION) = REPORT %then %do;
16318               filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16319               %include temp;
16320               filename temp;
16321               %report;
16322            %end;
16323            %else
16324            %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16325               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16326               %include temp;
16327               filename temp;
16328               %openvariableset;
16329            %end;
16330            %else
16331            %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16332               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16333               %include temp;
16334               filename temp;
16335               %closevariableset;
16336            %end;
16337      %mend main;
16338      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emsamp.Fimport_update.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_UPDATE.SOURCE.
16339     +%macro update;
16340     +    %let oldrole = %str();
16341     +    data _null_;
16342     +       set &em_data_exportset;
16343     +       where NODEPORT='TRAIN';
16344     +       call symput('oldrole', ROLE);
16345     +    run;
16346     +    %if &oldrole ne &em_property_role %then %do;
16347     +        data &em_data_exportset;
16348     +           set &em_data_exportset;
16349     +           if NODEPORT='TRAIN' then do;
16350     +              ROLE="&em_property_role";
16351     +              NEEDUPDATE='Y';
16352     +              EXPORT='Y';
16353     +           end;
16354     +        run;
16355     +        filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16356     +        data _null_;
16357     +           file x;
16358     +           put ' ';
16359     +        run;
16360     +        filename x;
16361     +    %end;
16362     +    %else %do;
16363     +        data &em_data_exportset;
16364     +           set &em_data_exportset;
16365     +           if NODEPORT='TRAIN' then do;
16366     +              ROLE="&em_property_role";
16367     +              NEEDUPDATE='Y';
16368     +              EXPORT='Y';
16369     +           end;
16370     +        run;
16371     +    %end;
16372     +
16373     +    %em_getname(key=EMCMETADEFAULT, type=DATA);
16374     +    %if %sysfunc(exist(&em_user_emcmetadefault)) and ^%sysfunc(exist(&em_lib..&em_nodeid._CMETA_TRAIN)) %then %do;
16375     +        data &em_lib..&em_nodeid._CMETA_TRAIN;
16376     +           set &em_user_emcmetadefault;
16377     +           drop DROP;
16378     +           where DROP='N';
16379     +        run;
16380     +    %end;
16381     +
16382     +%mend update;
16383     +
16384     +
16385     +
16386     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(UPDATE):   data _null_;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   where NODEPORT='TRAIN';
MPRINT(UPDATE):   call symput('oldrole', ROLE);
MPRINT(UPDATE):   run;

NOTE: There were 1 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
      WHERE NODEPORT='TRAIN';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(UPDATE):   data EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   if NODEPORT='TRAIN' then do;
MPRINT(UPDATE):   ROLE="TRAIN";
MPRINT(UPDATE):   NEEDUPDATE='Y';
MPRINT(UPDATE):   EXPORT='Y';
MPRINT(UPDATE):   end;
MPRINT(UPDATE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(UPDATE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16387      *------------------------------------------------------------*;
16388      * End UPDATE: FIMPORT;
16389      *------------------------------------------------------------*;

16390      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\FIMPORT\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16392      %let _HPDMGRIDHOST=;
16393      %let _HPDMGRIDINSTALLLOC=;
16394      %let _HPDMGRIDDATASERVER=;
16395      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* FIMPORT : End update 
* datetime : 01DEC2019:16:11:16 
* 
*------------------------------------------------------------* 
16396      %let _emdsep = \;
16397      %em_getactionstatus(emlib =EMWS1, nodeid=FIMPORT);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16398      %let em_filemodtime=;
16399      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
16400      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
16401      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
16402      where fileref eq "#LN00112";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00112";
16403      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
16404      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00112';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16405      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
16406      %let em_Train = N;
16407      %let em_Score = N;
16408      %let em_Report = N;
16409      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

16410      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16411      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16412      put '<Node Id="FIMPORT" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Complete" Pid="" Gridid=""/>';
16413      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 54.
      The maximum record length was 54.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

16414      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16415      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "FIMPORT" is up to date and doesn't need to run. 
Traverser: WaitingNode "IMPT" 
Traverser: WaitingNode "CLUS" 
Traverser: WaitingNode "PROF" 
traverser_readyNode_note 
16416      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16417      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16418      put '<Node Id="Part" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Update" Pid="" Gridid=""/>';
16419      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

16420      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Part : Beginning update before running 
* datetime : 01DEC2019:16:11:17 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Part_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.FIMPORT_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "DOCUMENT" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Part\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16439      %let _HPDMGRIDHOST=;
16440      %let _HPDMGRIDINSTALLLOC=;
16441      %let _HPDMGRIDDATASERVER=;
16442      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Part : End update 
* datetime : 01DEC2019:16:11:17 
* 
*------------------------------------------------------------* 
16443      %let _emdsep = \;
16444      %em_getactionstatus(emlib =EMWS1, nodeid=Part);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16445      %let em_Train = N;
16446      %let em_Score = N;
16447      %let em_Report = N;
16448      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16449      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16450      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16451      put '<Node Id="Part" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Complete" Pid="" Gridid=""/>';
16452      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16453      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16454      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "Part" is up to date and doesn't need to run. 
Traverser: WaitingNode "CLUS" 
Traverser: WaitingNode "PROF" 
traverser_readyNode_note 
16455      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16456      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16457      put '<Node Id="Impt" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Update" Pid="" Gridid=""/>';
16458      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

16459      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Impt : Beginning update before running 
* datetime : 01DEC2019:16:11:17 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Impt_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Impt\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16479      %let _HPDMGRIDHOST=;
16480      %let _HPDMGRIDINSTALLLOC=;
16481      %let _HPDMGRIDDATASERVER=;
16482      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Impt : End update 
* datetime : 01DEC2019:16:11:17 
* 
*------------------------------------------------------------* 
16483      %let _emdsep = \;
16484      %em_getactionstatus(emlib =EMWS1, nodeid=Impt);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16485      %let em_Train = N;
16486      %let em_Score = N;
16487      %let em_Report = N;
16488      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16489      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16490      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16491      put '<Node Id="Impt" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Complete" Pid="" Gridid=""/>';
16492      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16493      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16494      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Node "Impt" is up to date and doesn't need to run. 
Traverser: WaitingNode "PROF" 
traverser_readyNode_note 
16495      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16496      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16497      put '<Node Id="Clus" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Clus" Event="Update" Pid="" Gridid=""/>';
16498      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

16499      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Clus : Beginning update before running 
* datetime : 01DEC2019:16:11:18 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Clus_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Clus\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16519      %let _HPDMGRIDHOST=;
16520      %let _HPDMGRIDINSTALLLOC=;
16521      %let _HPDMGRIDDATASERVER=;
16522      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Clus : End update 
* datetime : 01DEC2019:16:11:18 
* 
*------------------------------------------------------------* 
16523      %let _emdsep = \;
16524      %em_getactionstatus(emlib =EMWS1, nodeid=Clus);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16525      %let em_Train = Y;
16526      %let em_Score = N;
16527      %let em_Report = N;
16528      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16529      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16530      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16531      put '<Node Id="Clus" Event="Run" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Clus" Event="Run" Pid="" Gridid=""/>';
16532      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 46.
      The maximum record length was 46.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16533      options sascmd="!sascmdv -nosyntaxcheck -noasynchio -noobjectserver";
MPRINT(EM_DIAGRAM):    options sascmd="!sascmdv -nosyntaxcheck -noasynchio -noobjectserver";
16534      %let SYSCC=0;
16535      signon C1N8FCHO macvar=C1N8FCHO;
MPRINT(EM_DIAGRAM):   signon macvar=C1N8FCHO;
WARNING: TCP Access method tracing is enabled.
NOTE: Default SASCMD value being used is: "C:\Program Files\SASHome\SASFoundation\9.4\SAS.EXE" -nologo -noterminal -noxcmd -objectserver -objectserverparms "protocol=bridge dnsname=127.0.0.1 jcbp=53408" -sspi -secpackage NTLM  -xcmd.
NOTE: Remote signon to C1N8FCHO commencing (SAS Release 9.04.01M3P062415).
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M3) 
      Licensed to UNIVERSITI MALAYA, Site 12600285.
NOTE: This session is executing on the X64_8PRO  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.1
      SAS/ETS 14.1
      SAS/OR 14.1
      SAS/IML 14.1
      SAS/QC 14.1

NOTE: Additional host information:

 X64_8PRO WIN 6.2.9200  Workstation

NOTE: SAS initialization used:
      real time           0.35 seconds
      cpu time            0.31 seconds
      
NOTE: Remote signon to C1N8FCHO complete.
16536      rsubmit C1N8FCHO wait=N persist=N  ;
MPRINT(EM_DIAGRAM):    rsubmit wait=N persist=N ;
The SAS System

NOTE: Background remote submit to C1N8FCHO in progress.
NOTE: Remote submit to C1N8FCHO commencing.
MPRINT(EM_DIAGRAM):   %global emexceptionstring emloopmode emloopnumber;
MPRINT(EM_DIAGRAM):   %let EMUSERID = %bquote(jy);
MPRINT(EM_DIAGRAM):   %let EMLDSPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\DataSources);
MPRINT(EM_DIAGRAM):   %let EMFLOWMODE = Y;
MPRINT(EM_DIAGRAM):   %let EMONODE = %bquote(Clus);
MPRINT(EM_DIAGRAM):   %let EMPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1);
MPRINT(EM_DIAGRAM):   %let EMWS = EMWS1;
MPRINT(EM_DIAGRAM):   %let EMNODECLASS = SASHELP.EMEXPL.CLUSTER.CLASS;
MPRINT(EM_DIAGRAM):   %let EMSTATUSDIR = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\System);
MPRINT(EM_DIAGRAM):   %let EM_DEBUG =;
MPRINT(EM_DIAGRAM):   %let EMPROJECTCODE = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\System\STARTUP.sas);
MPRINT(EM_DIAGRAM):   %let EMSERVERCODE = %nrstr();
MPRINT(EM_DIAGRAM):   %let EM_USERID = %bquote(jy);
MPRINT(EM_DIAGRAM):   %let EM_METAHOST =;
MPRINT(EM_DIAGRAM):   %let EM_METAPORT =;
MPRINT(EM_DIAGRAM):   %let EM_JAVAPACKAGE = %bquote();
MPRINT(EM_DIAGRAM):   %let EMPROJECTPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project);
MPRINT(EM_DIAGRAM):   %let EMPROJNAME = %nrstr(SASEM_Project);
MPRINT(EM_DIAGRAM):   %let EMPROJPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject);
MPRINT(EM_DIAGRAM):   %let em_Train = Y;
MPRINT(EM_DIAGRAM):   %let em_Score = N;
MPRINT(EM_DIAGRAM):   %let em_Report = N;
MPRINT(EM_DIAGRAM):   %let emloopmode =;
MPRINT(EM_DIAGRAM):   %let emloopnumber =0;
MPRINT(EM_DIAGRAM):   %let emloopId =Clus;
MPRINT(EM_DIAGRAM):   %let emexceptionstring=;
MPRINT(EM_DIAGRAM):   options VBUFSIZE= 64M;
MPRINT(EM_DIAGRAM):   %em5run();
MPRINT(EM_DIAGRAM):   %put &&emexceptionstring;
MPRINT(EM_DIAGRAM):   %sysrput emerror_Clus = &&emexceptionstring;
MPRINT(EM_DIAGRAM):   %put &&emloopmode;
MPRINT(EM_DIAGRAM):   %sysrput emloopmode_Clus = &&emloopmode;
MPRINT(EM_DIAGRAM):   endrsubmit;
16537      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16538      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16539      put '<Node Id="Clus" Event="Run" Pid=" " Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Clus" Event="Run" Pid=" " Gridid=""/>';
16540      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 47.
      The maximum record length was 47.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16541      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16542      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16543      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16544      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16545      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16546      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16547      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16548      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16549      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16550      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16551      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16552      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16553      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16554      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16555      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16556      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16557      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16558      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16559      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16560      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16561      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16562      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16563      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16564      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16565      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16566      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1     %global emexceptionstring emloopmode emloopnumber;
2     %let EMUSERID = %bquote(jy);
3     %let EMLDSPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\DataSources);
4     %let EMFLOWMODE = Y;
5     %let EMONODE = %bquote(Clus);
6     %let EMPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1);
7     %let EMWS = EMWS1;
8     %let EMNODECLASS = SASHELP.EMEXPL.CLUSTER.CLASS;
9     %let EMSTATUSDIR = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\System);
10    %let EM_DEBUG =;
11    %let EMPROJECTCODE = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\System\STARTUP.sas);
12    %let EMSERVERCODE = %nrstr();
13    %let EM_USERID = %bquote(jy);
14    %let EM_METAHOST =;
15    %let EM_METAPORT =;
16    %let EM_JAVAPACKAGE = %bquote();
17    %let EMPROJECTPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project);
18    %let EMPROJNAME = %nrstr(SASEM_Project);
19    %let EMPROJPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject);
20    %let em_Train = Y;
21    %let em_Score = N;
22    %let em_Report = N;
23    %let emloopmode =;
24    %let emloopnumber =0;
25    %let emloopId =Clus;
26    %let emexceptionstring=;
27    options VBUFSIZE= 64M;
28    %em5run();

*------------------------------------------------------------* 
* 
* Clus : Running 
* datetime : 01DEC2019:16:11:19 
* 
*------------------------------------------------------------* 
6005   %let SYSCC =0;
6006   %let EMGROUPMODE =;
6007   %let EMGROUPID =;
15345  data EMWS1.Clus_EMTRAINVARIABLE;
15346  length NAME $64;
15347  set EMWS1.Clus_VariableSet;
15348  label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
15349     "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15350  label USE = "%sysfunc(sasmsg(sashelp.dmine, META_USE_VLABEL, NOQUOTE))";
15351  label REPORT = "%sysfunc(sasmsg(sashelp.dmine, META_REPORT_VLABEL, NOQUOTE))";
15352  drop lowerlimit upperlimit creator--type format--length;
15353  run;

NOTE: There were 44 observations read from the data set EMWS1.CLUS_VARIABLESET.
NOTE: The data set EMWS1.CLUS_EMTRAINVARIABLE has 44 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

15354  %let emexceptionstring =;
*------------------------------------------------------------* 
* 
* Clus : End run 
* datetime : 01DEC2019:16:11:25 
* 
*------------------------------------------------------------* 
NOTE: The PROCEDURE DISPLAY printed pages 1-2.
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           6.44 seconds
      cpu time            3.76 seconds
      

15357   %put &&emexceptionstring;
 
15358   %sysrput emerror_Clus = &&emexceptionstring;
15359   %put &&emloopmode;
 
15360   %sysrput emloopmode_Clus = &&emloopmode;
NOTE: Remote submit to C1N8FCHO complete.
NOTE: Remote signoff from C1N8FCHO commencing.
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           6.91 seconds
      cpu time            4.09 seconds
      
NOTE: Remote signoff from C1N8FCHO complete.
Traverser: WaitingNode "PROF" 
traverser_runingNode_note 
16567      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16568      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Node "Clus" ran. 
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Clus\TRAINPROPERTIES.xml' encoding="UTF-8" NOBOM;
Node "Clus" succeeded. 
16570      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16571      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16572      put '<Node Id="Clus" Event="Complete" Pid="15264" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Clus" Event="Complete" Pid="15264" Gridid=""/>';
16573      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

traverser_readyNode_note 
NOTE: There are no active tasks/transactions.
16574      waitfor _all_ C1N8FCHO;
MPRINT(EM_DIAGRAM):    waitfor _all_ C1N8FCHO;
16575      signoff C1N8FCHO;
MPRINT(EM_DIAGRAM):   signoff;
NOTE: A link to C1N8FCHO does not exist.  SIGNOFF is not necessary.
16576      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
16577      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16578      put '<Node Id="Prof" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Prof" Event="Update" Pid="" Gridid=""/>';
16579      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16580      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Prof : Beginning update before running 
* datetime : 01DEC2019:16:11:26 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Prof_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
16611      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16612      * Prof: Update Variables Set;
MPRINT(EM_DIAGRAM):   * Prof: Update Variables Set;
16613      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

16614      proc sort data=EMWS1.Clus_CMeta_TRAIN out=_SortedVar;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus_CMeta_TRAIN out=_SortedVar;
16615      by name;
MPRINT(EM_DIAGRAM):   by name;
16616      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 49 observations read from the data set EMWS1.CLUS_CMETA_TRAIN.
NOTE: The data set WORK._SORTEDVAR has 49 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

16617      proc sort data=EMWS1.Prof_VariableSet;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Prof_VariableSet;
16618      by name;
MPRINT(EM_DIAGRAM):   by name;
16619      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16620      data EMWS1.Prof_VariableSet;
MPRINT(EM_DIAGRAM):   data EMWS1.Prof_VariableSet;
16621      merge _SortedVar(in=_a) EMWS1.Prof_VariableSet(in=_b rename=(ROLE = OLDROLE) keep=NAME ROLE USE REPORT);
MPRINT(EM_DIAGRAM):   merge _SortedVar(in=_a) EMWS1.Prof_VariableSet(in=_b rename=(ROLE = OLDROLE) keep=NAME ROLE USE REPORT);
16622      by name;
MPRINT(EM_DIAGRAM):   by name;
16623      if (OLDROLE = 'TARGET' and use = 'Y') and ROLE = 'REJECTED' then USE = 'D';
MPRINT(EM_DIAGRAM):   if (OLDROLE = 'TARGET' and use = 'Y') and ROLE = 'REJECTED' then USE = 'D';
16624      drop OLDROLE;
MPRINT(EM_DIAGRAM):   drop OLDROLE;
16625      if _b and ^_a then delete;
MPRINT(EM_DIAGRAM):   if _b and ^_a then delete;
16626      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 49 observations read from the data set WORK._SORTEDVAR.
NOTE: There were 49 observations read from the data set EMWS1.PROF_VARIABLESET.
NOTE: The data set EMWS1.PROF_VARIABLESET has 49 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

16627      * Prof: End of Update Variables Set;
MPRINT(EM_DIAGRAM):    * Prof: End of Update Variables Set;
16628      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16823      %let emexceptionString =;
16824      %let EMEXCEPTIONSTRING=;
16825      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16826      * UPDATE: Prof;
MPRINT(EM_DIAGRAM):   * UPDATE: Prof;
16827      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16828      %let EM_ACTION = UPDATE;
16829      %let syscc = 0;
16830      %macro main;
16831         %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
16832             options MPRINT;
16833         %end;
16834      
16835         filename temp catalog 'sashelp.emexpl.profile_macros.source';
16836         %include temp;
16837         filename temp;
16838      
16839         /* Initialize property macro variables */
16840         %SetProperties;
16841      
16842         %if %upcase(&EM_ACTION) = CREATE %then %do;
16843      
16844             filename temp catalog 'sashelp.emexpl.profile_create.source';
16845             %include temp;
16846             filename temp;
16847             %create;
16848         %end;
16849         %else
16850         %if %upcase(&EM_ACTION) = TRAIN %then %do;
16851      
16852             filename temp catalog 'sashelp.emexpl.profile_train.source';
16853             %include temp;
16854             filename temp;
16855             %train;
16856         %end;
16857      %mend main;
16858      
16859      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
16860     +%macro SetProperties;
16861     +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
16862     +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
16863     +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
16864     +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
16865     +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
16866     +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
16867     +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
16868     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
16869     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
16870     +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
16871     +%mend SetProperties;
16872     +
16873     +
16874     +%macro makeVarMacros(level= );
16875     +
16876     +    %let numvars = 0;
16877     +    %let where   = '';
16878     +
16879     +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16880     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
16881     +    %else
16882     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
16883     +
16884     +    %if &level = INTERVAL %then %do;
16885     +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
16886     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16887     +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
16888     +    %end;
16889     +    %else %do;
16890     +        %if &level = NOMINAL %then %do;
16891     +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
16892     +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
16893     +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
16894     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
16895     +             %end;
16896     +             %else
16897     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
16898     +
16899     +        %end;
16900     +        %else %do;
16901     +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
16902     +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16903     +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
16904     +        %end;
16905     +    %end;
16906     +
16907     +    %if &numvars>0 %then %do;
16908     +         %let numloop = %sysfunc(ceil(&numvars/10000));
16909     +         %let loopcount = 0;
16910     +
16911     +         %do %while((&numloop - &loopcount) > 0);
16912     +             %let first = %eval((&loopcount*10000) + 1);
16913     +             %let last  = %eval(&first + 10000);
16914     +             %let loopcount = %eval(&loopcount +1);
16915     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
16916     +             filename X catalog "&centry";
16917     +             data _null_;
16918     +                length _STRING_ $80;
16919     +                retain _STRING_ ;
16920     +                file X;
16921     +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
16922     +
16923     +                where &where;
16924     +
16925     +                if _N_=1 then
16926     +                   put '%macro _PROFVAR;';
16927     +
16928     +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
16929     +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
16930     +                   if eof then do;
16931     +                      put _STRING_;
16932     +                      put '%mend _PROFVAR;';
16933     +                   end;
16934     +                end;
16935     +                else do;
16936     +                   put _STRING_;
16937     +                  _string_ = TRIM(NAME);
16938     +                   if eof then do;
16939     +                      put _string_;
16940     +                      put '%mend _PROFVAR;';
16941     +                   end;
16942     +                end;
16943     +             run;
16944     +             filename X;
16945     +         %end;
16946     +    %end;
16947     +
16948     +%mend makeVarMacros;
16949     +
16950     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: Prof;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16951      *------------------------------------------------------------*;
16952      * End UPDATE: Prof;
16953      *------------------------------------------------------------*;

16954      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Prof\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16956      %let _HPDMGRIDHOST=;
16957      %let _HPDMGRIDINSTALLLOC=;
16958      %let _HPDMGRIDDATASERVER=;
16959      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Prof : End update 
* datetime : 01DEC2019:16:11:27 
* 
*------------------------------------------------------------* 
16960      %let _emdsep = \;
16961      %em_getactionstatus(emlib =EMWS1, nodeid=Prof);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16962      %let em_Train = Y;
16963      %let em_Report = Y;
16964      %let em_Score = Y;
16965      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16966      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16967      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16968      put '<Node Id="Prof" Event="Run" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Prof" Event="Run" Pid="" Gridid=""/>';
16969      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 46.
      The maximum record length was 46.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

16970      options sascmd="!sascmdv -nosyntaxcheck -noasynchio -noobjectserver";
MPRINT(EM_DIAGRAM):    options sascmd="!sascmdv -nosyntaxcheck -noasynchio -noobjectserver";
16971      %let SYSCC=0;
16972      signon C08R8LTP macvar=C08R8LTP;
MPRINT(EM_DIAGRAM):   signon macvar=C08R8LTP;
NOTE: Default SASCMD value being used is: "C:\Program Files\SASHome\SASFoundation\9.4\SAS.EXE" -nologo -noterminal -noxcmd -objectserver -objectserverparms "protocol=bridge dnsname=127.0.0.1 jcbp=53408" -sspi -secpackage NTLM  -xcmd.
NOTE: Remote signon to C08R8LTP commencing (SAS Release 9.04.01M3P062415).
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M3) 
      Licensed to UNIVERSITI MALAYA, Site 12600285.
NOTE: This session is executing on the X64_8PRO  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.1
      SAS/ETS 14.1
      SAS/OR 14.1
      SAS/IML 14.1
      SAS/QC 14.1

NOTE: Additional host information:

 X64_8PRO WIN 6.2.9200  Workstation

NOTE: SAS initialization used:
      real time           0.53 seconds
      cpu time            0.34 seconds
      
NOTE: Remote signon to C08R8LTP complete.
16973      rsubmit C08R8LTP wait=N persist=N  ;
MPRINT(EM_DIAGRAM):    rsubmit wait=N persist=N ;
The SAS System

NOTE: Background remote submit to C08R8LTP in progress.
NOTE: Remote submit to C08R8LTP commencing.
MPRINT(EM_DIAGRAM):   %global emexceptionstring emloopmode emloopnumber;
MPRINT(EM_DIAGRAM):   %let EMUSERID = %bquote(jy);
MPRINT(EM_DIAGRAM):   %let EMLDSPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\DataSources);
MPRINT(EM_DIAGRAM):   %let EMFLOWMODE = Y;
MPRINT(EM_DIAGRAM):   %let EMONODE = %bquote(Prof);
MPRINT(EM_DIAGRAM):   %let EMPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1);
MPRINT(EM_DIAGRAM):   %let EMWS = EMWS1;
MPRINT(EM_DIAGRAM):   %let EMNODECLASS = SASHELP.EMCORE.EXTENSION.CLASS;
MPRINT(EM_DIAGRAM):   %let EMSTATUSDIR = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\System);
MPRINT(EM_DIAGRAM):   %let EM_DEBUG =;
MPRINT(EM_DIAGRAM):   %let EMPROJECTCODE = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\System\STARTUP.sas);
MPRINT(EM_DIAGRAM):   %let EMSERVERCODE = %nrstr();
MPRINT(EM_DIAGRAM):   %let EM_USERID = %bquote(jy);
MPRINT(EM_DIAGRAM):   %let EM_METAHOST =;
MPRINT(EM_DIAGRAM):   %let EM_METAPORT =;
MPRINT(EM_DIAGRAM):   %let EM_JAVAPACKAGE = %bquote();
MPRINT(EM_DIAGRAM):   %let EMPROJECTPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project);
MPRINT(EM_DIAGRAM):   %let EMPROJNAME = %nrstr(SASEM_Project);
MPRINT(EM_DIAGRAM):   %let EMPROJPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject);
MPRINT(EM_DIAGRAM):   %let em_Train = Y;
MPRINT(EM_DIAGRAM):   %let em_Score = Y;
MPRINT(EM_DIAGRAM):   %let em_Report = Y;
MPRINT(EM_DIAGRAM):   %let emloopmode =;
MPRINT(EM_DIAGRAM):   %let emloopnumber =0;
MPRINT(EM_DIAGRAM):   %let emloopId =Prof;
MPRINT(EM_DIAGRAM):   %let emexceptionstring=;
MPRINT(EM_DIAGRAM):   options VBUFSIZE= 64M;
MPRINT(EM_DIAGRAM):   %em5run();
MPRINT(EM_DIAGRAM):   %put &&emexceptionstring;
MPRINT(EM_DIAGRAM):   %sysrput emerror_Prof = &&emexceptionstring;
MPRINT(EM_DIAGRAM):   %put &&emloopmode;
MPRINT(EM_DIAGRAM):   %sysrput emloopmode_Prof = &&emloopmode;
MPRINT(EM_DIAGRAM):   endrsubmit;
16974      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16975      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16976      put '<Node Id="Prof" Event="Run" Pid=" " Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Prof" Event="Run" Pid=" " Gridid=""/>';
16977      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 47.
      The maximum record length was 47.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16978      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16979      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
16980      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16981      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
16982      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16983      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
16984      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16985      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
16986      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16987      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
16988      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16989      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
16990      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16991      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
16992      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16993      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
16994      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16995      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
16996      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16997      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
16998      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16999      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17000      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17001      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17002      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17003      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17004      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17005      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17006      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17007      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17008      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17009      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17010      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17011      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17012      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17013      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17014      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17015      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1     %global emexceptionstring emloopmode emloopnumber;
2     %let EMUSERID = %bquote(jy);
3     %let EMLDSPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\DataSources);
4     %let EMFLOWMODE = Y;
5     %let EMONODE = %bquote(Prof);
6     %let EMPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1);
7     %let EMWS = EMWS1;
8     %let EMNODECLASS = SASHELP.EMCORE.EXTENSION.CLASS;
9     %let EMSTATUSDIR = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\System);
10    %let EM_DEBUG =;
11    %let EMPROJECTCODE = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\System\STARTUP.sas);
12    %let EMSERVERCODE = %nrstr();
13    %let EM_USERID = %bquote(jy);
14    %let EM_METAHOST =;
15    %let EM_METAPORT =;
16    %let EM_JAVAPACKAGE = %bquote();
17    %let EMPROJECTPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project);
18    %let EMPROJNAME = %nrstr(SASEM_Project);
19    %let EMPROJPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject);
20    %let em_Train = Y;
21    %let em_Score = Y;
22    %let em_Report = Y;
23    %let emloopmode =;
24    %let emloopnumber =0;
25    %let emloopId =Prof;
26    %let emexceptionstring=;
27    options VBUFSIZE= 64M;
28    %em5run();

6005   %let EM_MACROS=Y;
6006   filename temp catalog 'sashelp.emutil.em_loadrunmacros.source';
6007   %include temp;
NOTE: ALT_TOOLS Macros loaded
NOTE: Test usage by running the EM_TEST macro
NOTE: Fileref _TMPHPDM has been deassigned.
NOTE: Fileref _TMPHPDM has been deassigned.
9853   filename temp;
NOTE: Fileref TEMP has been deassigned.

*------------------------------------------------------------* 
* 
* Prof : Running 
* datetime : 01DEC2019:16:11:28 
* 
*------------------------------------------------------------* 
9854   %let SYSCC =0;
9855   %let EMGROUPMODE =;
9856   %let EMGROUPID =;
17739  data EMWS1.Prof_EMTRAINVARIABLE;
17740  length NAME $64;
17741  set EMWS1.Prof_VariableSet;
17742  label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
17743     "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
17744  label USE = "%sysfunc(sasmsg(sashelp.dmine, META_USE_VLABEL, NOQUOTE))";
17745  label REPORT = "%sysfunc(sasmsg(sashelp.dmine, META_REPORT_VLABEL, NOQUOTE))";
17746  drop lowerlimit upperlimit creator--type format--length;
17747  run;

NOTE: There were 49 observations read from the data set EMWS1.PROF_VARIABLESET.
NOTE: The data set EMWS1.PROF_EMTRAINVARIABLE has 49 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

17748  %let emexceptionstring =;
*------------------------------------------------------------* 
* 
* Prof : End run 
* datetime : 01DEC2019:16:11:37 
* 
*------------------------------------------------------------* 
NOTE: The PROCEDURE DISPLAY printed pages 1-4.
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           9.75 seconds
      cpu time            6.75 seconds
      

17751   %put &&emexceptionstring;
 
17752   %sysrput emerror_Prof = &&emexceptionstring;
17753   %put &&emloopmode;
 
17754   %sysrput emloopmode_Prof = &&emloopmode;
NOTE: Remote submit to C08R8LTP complete.
NOTE: Remote signoff from C08R8LTP commencing.
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           10.41 seconds
      cpu time            7.12 seconds
      
traverser_runingNode_note 
17016      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17017      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Node "Prof" ran. 
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Prof\TRAINPROPERTIES.xml' encoding="UTF-8" NOBOM;
Node "Prof" succeeded. 
17019      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17020      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17021      put '<Node Id="Prof" Event="Complete" Pid="14108" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Prof" Event="Complete" Pid="14108" Gridid=""/>';
17022      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=53407,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: Remote signoff from C08R8LTP complete.
Traverser: Run Completed 
NOTE: There are no active tasks/transactions.
17023      waitfor _all_ C08R8LTP;
MPRINT(EM_DIAGRAM):    waitfor _all_ C08R8LTP;
17024      signoff C08R8LTP;
MPRINT(EM_DIAGRAM):   signoff;
NOTE: A link to C08R8LTP does not exist.  SIGNOFF is not necessary.
17025      proc printto;
MPRINT(EM_DIAGRAM):   proc printto;
17026      run;
MPRINT(EM_DIAGRAM):   run;

