NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
16067      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16068      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16069      put '<Node Id="FIMPORT" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Update" Pid="" Gridid=""/>';
16070      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16071      %let emloopmode =;
*------------------------------------------------------------* 
* 
* FIMPORT : Beginning update before running 
* datetime : 12DEC2019:15:50:37 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16273      %let emexceptionString =;
16274      %let EMEXCEPTIONSTRING=;
16275      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16276      * UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   * UPDATE: FIMPORT;
16277      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16278      %let EM_ACTION = UPDATE;
16279      %let syscc = 0;
16280      /* Fimport.source */
16281      %macro main;
16282            %if %upcase(&EM_ACTION) = CREATE %then %do;
16283               filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16284               %include temp;
16285               filename temp;
16286               %create;
16287            %end;
16288            %else
16289            %if %upcase(&EM_ACTION) = TRAIN %then %do;
16290               filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16291               %include temp;
16292               filename temp;
16293               %train;
16294            %end;
16295            %else
16296            %if %upcase(&EM_ACTION) = UPDATE %then %do;
16297               filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16298               %include temp;
16299               filename temp;
16300               %update;
16301            %end;
16302            %else
16303            %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16304               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16305               %include temp;
16306               filename temp;
16307               %property;
16308            %end;
16309             %else
16310            %if %upcase(&EM_ACTION) = SCORE %then %do;
16311               filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16312               %include temp;
16313               filename temp;
16314               %score;
16315            %end;
16316            %else
16317            %if %upcase(&EM_ACTION) = REPORT %then %do;
16318               filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16319               %include temp;
16320               filename temp;
16321               %report;
16322            %end;
16323            %else
16324            %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16325               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16326               %include temp;
16327               filename temp;
16328               %openvariableset;
16329            %end;
16330            %else
16331            %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16332               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16333               %include temp;
16334               filename temp;
16335               %closevariableset;
16336            %end;
16337      %mend main;
16338      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emsamp.Fimport_update.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_UPDATE.SOURCE.
16339     +%macro update;
16340     +    %let oldrole = %str();
16341     +    data _null_;
16342     +       set &em_data_exportset;
16343     +       where NODEPORT='TRAIN';
16344     +       call symput('oldrole', ROLE);
16345     +    run;
16346     +    %if &oldrole ne &em_property_role %then %do;
16347     +        data &em_data_exportset;
16348     +           set &em_data_exportset;
16349     +           if NODEPORT='TRAIN' then do;
16350     +              ROLE="&em_property_role";
16351     +              NEEDUPDATE='Y';
16352     +              EXPORT='Y';
16353     +           end;
16354     +        run;
16355     +        filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16356     +        data _null_;
16357     +           file x;
16358     +           put ' ';
16359     +        run;
16360     +        filename x;
16361     +    %end;
16362     +    %else %do;
16363     +        data &em_data_exportset;
16364     +           set &em_data_exportset;
16365     +           if NODEPORT='TRAIN' then do;
16366     +              ROLE="&em_property_role";
16367     +              NEEDUPDATE='Y';
16368     +              EXPORT='Y';
16369     +           end;
16370     +        run;
16371     +    %end;
16372     +
16373     +    %em_getname(key=EMCMETADEFAULT, type=DATA);
16374     +    %if %sysfunc(exist(&em_user_emcmetadefault)) and ^%sysfunc(exist(&em_lib..&em_nodeid._CMETA_TRAIN)) %then %do;
16375     +        data &em_lib..&em_nodeid._CMETA_TRAIN;
16376     +           set &em_user_emcmetadefault;
16377     +           drop DROP;
16378     +           where DROP='N';
16379     +        run;
16380     +    %end;
16381     +
16382     +%mend update;
16383     +
16384     +
16385     +
16386     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(UPDATE):   data _null_;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   where NODEPORT='TRAIN';
MPRINT(UPDATE):   call symput('oldrole', ROLE);
MPRINT(UPDATE):   run;

NOTE: There were 1 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
      WHERE NODEPORT='TRAIN';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(UPDATE):   data EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   if NODEPORT='TRAIN' then do;
MPRINT(UPDATE):   ROLE="TRAIN";
MPRINT(UPDATE):   NEEDUPDATE='Y';
MPRINT(UPDATE):   EXPORT='Y';
MPRINT(UPDATE):   end;
MPRINT(UPDATE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(UPDATE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16387      *------------------------------------------------------------*;
16388      * End UPDATE: FIMPORT;
16389      *------------------------------------------------------------*;

16390      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\FIMPORT\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16392      %let _HPDMGRIDHOST=;
16393      %let _HPDMGRIDINSTALLLOC=;
16394      %let _HPDMGRIDDATASERVER=;
16395      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* FIMPORT : End update 
* datetime : 12DEC2019:15:50:37 
* 
*------------------------------------------------------------* 
16396      %let _emdsep = \;
16397      %em_getactionstatus(emlib =EMWS1, nodeid=FIMPORT);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16398      %let em_filemodtime=;
16399      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
16400      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
16401      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
16402      where fileref eq "#LN00112";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00112";
16403      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
16404      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00112';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

16405      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
16406      %let em_Train = N;
16407      %let em_Score = N;
16408      %let em_Report = N;
16409      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

16410      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16411      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16412      put '<Node Id="FIMPORT" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Complete" Pid="" Gridid=""/>';
16413      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 54.
      The maximum record length was 54.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16414      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16415      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "FIMPORT" is up to date and doesn't need to run. 
Traverser: WaitingNode "TREE2" 
Traverser: WaitingNode "IMPT" 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "MDLCOMP" 
traverser_readyNode_note 
16416      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16417      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16418      put '<Node Id="Part" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Update" Pid="" Gridid=""/>';
16419      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16420      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Part : Beginning update before running 
* datetime : 12DEC2019:15:50:38 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Part_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.FIMPORT_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "DOCUMENT" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Part\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16439      %let _HPDMGRIDHOST=;
16440      %let _HPDMGRIDINSTALLLOC=;
16441      %let _HPDMGRIDDATASERVER=;
16442      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Part : End update 
* datetime : 12DEC2019:15:50:38 
* 
*------------------------------------------------------------* 
16443      %let _emdsep = \;
16444      %em_getactionstatus(emlib =EMWS1, nodeid=Part);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16445      %let em_Train = N;
16446      %let em_Score = N;
16447      %let em_Report = N;
16448      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16449      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16450      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16451      put '<Node Id="Part" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Complete" Pid="" Gridid=""/>';
16452      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16453      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16454      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Node "Part" is up to date and doesn't need to run. 
Traverser: WaitingNode "TREE2" 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "MDLCOMP" 
traverser_readyNode_note 
16455      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16456      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16457      put '<Node Id="Impt" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Update" Pid="" Gridid=""/>';
16458      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

16459      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Impt : Beginning update before running 
* datetime : 12DEC2019:15:50:39 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Impt_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Impt\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16479      %let _HPDMGRIDHOST=;
16480      %let _HPDMGRIDINSTALLLOC=;
16481      %let _HPDMGRIDDATASERVER=;
16482      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Impt : End update 
* datetime : 12DEC2019:15:50:39 
* 
*------------------------------------------------------------* 
16483      %let _emdsep = \;
16484      %em_getactionstatus(emlib =EMWS1, nodeid=Impt);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16485      %let em_Train = N;
16486      %let em_Score = N;
16487      %let em_Report = N;
16488      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16489      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16490      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16491      put '<Node Id="Impt" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Complete" Pid="" Gridid=""/>';
16492      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

16493      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16494      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "Impt" is up to date and doesn't need to run. 
Traverser: WaitingNode "MDLCOMP" 
traverser_readyNode_note 
traverser_readyNode_note 
16495      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16496      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16497      put '<Node Id="Tree2" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree2" Event="Update" Pid="" Gridid=""/>';
16498      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16499      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree2 : Beginning update before running 
* datetime : 12DEC2019:15:50:39 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DIAGRAM):   label DECISION1= "TRUE";
MPRINT(EM_DIAGRAM):   label DECISION2= "FALSE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree2: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.audience_score_positive;
MPRINT(EM_DECDATA):   length audience_score_positive $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "TRUE" DECISION2= "FALSE" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   audience_score_positive="TRUE";
MPRINT(EM_DECDATA):   COUNT=1159;
MPRINT(EM_DECDATA):   DATAPRIOR=0.47538966365873;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.47538966365873;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   audience_score_positive="FALSE";
MPRINT(EM_DECDATA):   COUNT=1279;
MPRINT(EM_DECDATA):   DATAPRIOR=0.52461033634126;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.52461033634126;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DECDATA):   label DECISION1= 'TRUE';
MPRINT(EM_DECDATA):   label DECISION2= 'FALSE';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DIAGRAM):   label DECISION1= "TRUE";
MPRINT(EM_DIAGRAM):   label DECISION2= "FALSE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16916      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
16917      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
16918      TARGET="audience_score_positive";
MPRINT(EM_DIAGRAM):   TARGET="audience_score_positive";
16919      DECDATA="EMWS1.Tree2_audience_score_p_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree2_audience_score_p_DD";
16920      DECMETA="EMWS1.Tree2_audience_score_p_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree2_audience_score_p_DM";
16921      output;
MPRINT(EM_DIAGRAM):   output;
16922      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16923      %let emexceptionString =;
16924      %let EMEXCEPTIONSTRING=;
16925      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16926      * UPDATE: Tree2;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree2;
16927      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16928      %let EM_ACTION = UPDATE;
16929      %let syscc = 0;
16930      %macro main;
16931      
16932        %if %upcase(&EM_ACTION) = CREATE %then %do;
16933          filename temp catalog 'sashelp.emmodl.tree_create.source';
16934          %include temp;
16935          filename temp;
16936      
16937          %em_tree_create;
16938        %end;
16939      
16940         %else
16941         %if %upcase(&EM_ACTION) = TRAIN %then %do;
16942      
16943             filename temp catalog 'sashelp.emmodl.tree_train.source';
16944             %include temp;
16945             filename temp;
16946             %em_tree_train;
16947         %end;
16948      
16949        %else
16950        %if %upcase(&EM_ACTION) = SCORE %then %do;
16951          filename temp catalog 'sashelp.emmodl.tree_score.source';
16952          %include temp;
16953          filename temp;
16954      
16955          %em_tree_score;
16956      
16957        %end;
16958      
16959        %else
16960        %if %upcase(&EM_ACTION) = REPORT %then %do;
16961      
16962             filename temp catalog 'sashelp.emmodl.tree_report.source';
16963             %include temp;
16964             filename temp;
16965      
16966             %em_tree_report;
16967         %end;
16968      
16969        %else
16970        %if %upcase(&EM_ACTION) = OPENINT %then %do;
16971      
16972             filename temp catalog 'sashelp.emmodl.tree_actions.source';
16973             %include temp;
16974             filename temp;
16975             %EM_TREE_OPENTREEVIEWER;
16976      
16977         %end;
16978      
16979        %else
16980        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16981      
16982             filename temp catalog 'sashelp.emmodl.tree_actions.source';
16983             %include temp;
16984             filename temp;
16985             %EM_TREE_CLOSETREEVIEWER;
16986      
16987         %end;
16988      
16989      
16990         %doendm:
16991      %mend main;
16992      
16993      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
16994      
16995      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16996      * End UPDATE: Tree2;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree2;
16997      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

16998      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Tree2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17000      %let _HPDMGRIDHOST=;
17001      %let _HPDMGRIDINSTALLLOC=;
17002      %let _HPDMGRIDDATASERVER=;
17003      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree2 : End update 
* datetime : 12DEC2019:15:50:40 
* 
*------------------------------------------------------------* 
17004      %let _emdsep = \;
17005      %em_getactionstatus(emlib =EMWS1, nodeid=Tree2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17006      %let em_filemodtime=;
17007      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17008      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17009      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17010      where fileref eq "#LN00191";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00191";
17011      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17012      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00191';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17013      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17014      %let em_Train = N;
17015      %let em_Score = N;
17016      %let em_Report = N;
17017      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

17018      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17019      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17020      put '<Node Id="Tree2" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree2" Event="Complete" Pid="" Gridid=""/>';
17021      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17022      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17023      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17024      put '<Node Id="Tree" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree" Event="Update" Pid="" Gridid=""/>';
17025      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17026      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree : Beginning update before running 
* datetime : 12DEC2019:15:50:40 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DIAGRAM):   label DECISION1= "TRUE";
MPRINT(EM_DIAGRAM):   label DECISION2= "FALSE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.audience_score_positive;
MPRINT(EM_DECDATA):   length audience_score_positive $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "TRUE" DECISION2= "FALSE" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   audience_score_positive="TRUE";
MPRINT(EM_DECDATA):   COUNT=1159;
MPRINT(EM_DECDATA):   DATAPRIOR=0.4753896637;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.47538966365873;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   audience_score_positive="FALSE";
MPRINT(EM_DECDATA):   COUNT=1279;
MPRINT(EM_DECDATA):   DATAPRIOR=0.5246103363;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.52461033634126;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DECDATA):   label DECISION1= 'TRUE';
MPRINT(EM_DECDATA):   label DECISION2= 'FALSE';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DIAGRAM):   label DECISION1= "TRUE";
MPRINT(EM_DIAGRAM):   label DECISION2= "FALSE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17428      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
17429      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
17430      TARGET="audience_score_positive";
MPRINT(EM_DIAGRAM):   TARGET="audience_score_positive";
17431      DECDATA="EMWS1.Tree_audience_score_p_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree_audience_score_p_DD";
17432      DECMETA="EMWS1.Tree_audience_score_p_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree_audience_score_p_DM";
17433      output;
MPRINT(EM_DIAGRAM):   output;
17434      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17435      %let emexceptionString =;
17436      %let EMEXCEPTIONSTRING=;
17437      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17438      * UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree;
17439      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17440      %let EM_ACTION = UPDATE;
17441      %let syscc = 0;
17442      %macro main;
17443      
17444        %if %upcase(&EM_ACTION) = CREATE %then %do;
17445          filename temp catalog 'sashelp.emmodl.tree_create.source';
17446          %include temp;
17447          filename temp;
17448      
17449          %em_tree_create;
17450        %end;
17451      
17452         %else
17453         %if %upcase(&EM_ACTION) = TRAIN %then %do;
17454      
17455             filename temp catalog 'sashelp.emmodl.tree_train.source';
17456             %include temp;
17457             filename temp;
17458             %em_tree_train;
17459         %end;
17460      
17461        %else
17462        %if %upcase(&EM_ACTION) = SCORE %then %do;
17463          filename temp catalog 'sashelp.emmodl.tree_score.source';
17464          %include temp;
17465          filename temp;
17466      
17467          %em_tree_score;
17468      
17469        %end;
17470      
17471        %else
17472        %if %upcase(&EM_ACTION) = REPORT %then %do;
17473      
17474             filename temp catalog 'sashelp.emmodl.tree_report.source';
17475             %include temp;
17476             filename temp;
17477      
17478             %em_tree_report;
17479         %end;
17480      
17481        %else
17482        %if %upcase(&EM_ACTION) = OPENINT %then %do;
17483      
17484             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17485             %include temp;
17486             filename temp;
17487             %EM_TREE_OPENTREEVIEWER;
17488      
17489         %end;
17490      
17491        %else
17492        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17493      
17494             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17495             %include temp;
17496             filename temp;
17497             %EM_TREE_CLOSETREEVIEWER;
17498      
17499         %end;
17500      
17501      
17502         %doendm:
17503      %mend main;
17504      
17505      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
17506      
17507      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17508      * End UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree;
17509      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

17510      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Tree\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17512      %let _HPDMGRIDHOST=;
17513      %let _HPDMGRIDINSTALLLOC=;
17514      %let _HPDMGRIDDATASERVER=;
17515      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree : End update 
* datetime : 12DEC2019:15:50:40 
* 
*------------------------------------------------------------* 
17516      %let _emdsep = \;
17517      %em_getactionstatus(emlib =EMWS1, nodeid=Tree);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17518      %let em_filemodtime=;
17519      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17520      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17521      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17522      where fileref eq "#LN00211";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00211";
17523      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17524      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00211';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17525      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17526      %let em_Train = N;
17527      %let em_Score = N;
17528      %let em_Report = N;
17529      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

17530      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17531      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17532      put '<Node Id="Tree" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree" Event="Complete" Pid="" Gridid=""/>';
17533      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17534      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17535      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "Tree2" is up to date and doesn't need to run. 
Node "Tree" is up to date and doesn't need to run. 
traverser_readyNode_note 
17536      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17537      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17538      put '<Node Id="MdlComp" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Update" Pid="" Gridid=""/>';
17539      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17540      %let emloopmode =;
*------------------------------------------------------------* 
* 
* MdlComp : Beginning update before running 
* datetime : 12DEC2019:15:50:41 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.MdlComp_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_exportSet EMWS1.Tree_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("REG_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG_ESTIMATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base19E6TUR as select * from WORK.M0K065M9 order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp19E6TUR as select * from WORK.M07QLBT5 order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base19E6TUR compare=work._comp19E6TUR out=WORK._DIFF3LU6RYB noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create table WORK._TMP12QNB4CL as select * from WORK._DIFF3LU6RYB where PORT in (select PORT from WORK._DIFF3LU6RYB where _type_ = "DIF") order by PORT, _type_;
MPRINT(EM_DIAGRAM):   proc sql;
MPRINT(EM_DIAGRAM):   create table WORK.DELTAELEM27F6XAS as select * from WORK._DIFF3LU6RYB where _type_ = "COMPARE" and PORT not in (select PORT from WORK._DIFF3LU6RYB where _type_ = "DIF");
MPRINT(EM_DIAGRAM):   create table WORK.DELTDELEM27F6XAS as select * from WORK._DIFF3LU6RYB where _type_ = "BASE" and PORT not in (select PORT from WORK._DIFF3LU6RYB where _type_ = "DIF");
MPRINT(EM_DIAGRAM):   data WORK.DELTAELEM27F6XAS;
MPRINT(EM_DIAGRAM):   set WORK.DELTAELEM27F6XAS;
MPRINT(EM_DIAGRAM):   drop _obs_ _type_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.DELTDELEM27F6XAS;
MPRINT(EM_DIAGRAM):   set WORK.DELTDELEM27F6XAS;
MPRINT(EM_DIAGRAM):   drop _obs_ _type_;
MPRINT(EM_DIAGRAM):   run;
NOTE: There were 9 observations read from the data set WORK.MDLCOMP_FILTERSET.
NOTE: The data set EMWS1.MDLCOMP_IMPORTSET has 9 observations and 14 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE KEY='MODEL';
NOTE: The data set WORK.EMINFO40NT4A0C has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL numElements >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE (TARGET='audience_score_positive') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO405FWE57 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL numElements >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE KEY='MODEL';
NOTE: The data set WORK.EMINFO408QBGIM has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL numElements >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE (TARGET='audience_score_positive') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO436RZSQ7 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL numElements >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
17599      data EMWS1.MdlComp_VariableSet;
MPRINT(EM_DIAGRAM):    data EMWS1.MdlComp_VariableSet;
17600      length USE $1 NAME $32 ROLE $32 LEVEL $10 EVENT $32 LABEL $200;
MPRINT(EM_DIAGRAM):   length USE $1 NAME $32 ROLE $32 LEVEL $10 EVENT $32 LABEL $200;
17601      NAME = "audience_score_positive";
MPRINT(EM_DIAGRAM):   NAME = "audience_score_positive";
17602      ROLE="TARGET";
MPRINT(EM_DIAGRAM):   ROLE="TARGET";
17603      LEVEL = 'BINARY';
MPRINT(EM_DIAGRAM):   LEVEL = 'BINARY';
17604      EVENT = 'TRUE';
MPRINT(EM_DIAGRAM):   EVENT = 'TRUE';
17605      LABEL = '';
MPRINT(EM_DIAGRAM):   LABEL = '';
17606      output;
MPRINT(EM_DIAGRAM):   output;
17607      NAME = "audience_score_positive";
MPRINT(EM_DIAGRAM):   NAME = "audience_score_positive";
17608      ROLE="TARGET";
MPRINT(EM_DIAGRAM):   ROLE="TARGET";
17609      LEVEL = 'BINARY';
MPRINT(EM_DIAGRAM):   LEVEL = 'BINARY';
17610      EVENT = 'TRUE';
MPRINT(EM_DIAGRAM):   EVENT = 'TRUE';
17611      LABEL = '';
MPRINT(EM_DIAGRAM):   LABEL = '';
17612      output;
MPRINT(EM_DIAGRAM):   output;
17613      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable USE is uninitialized.
NOTE: The data set EMWS1.MDLCOMP_VARIABLESET has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

17614      proc sort data=EMWS1.MdlComp_VariableSet nodupkey NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp_VariableSet nodupkey NOTHREADS;
17615      by NAME LEVEL;
MPRINT(EM_DIAGRAM):   by NAME LEVEL;
17616      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS1.MDLCOMP_VARIABLESET.
NOTE: 1 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.MDLCOMP_VARIABLESET has 1 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

17617      data EMWS1.MdlComp_VariableSet;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_VariableSet;
17618      set EMWS1.MdlComp_VariableSet;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_VariableSet;
17619      if NAME = "audience_score_positive" then USE="Y";
MPRINT(EM_DIAGRAM):   if NAME = "audience_score_positive" then USE="Y";
17620      else USE = "N";
MPRINT(EM_DIAGRAM):   else USE = "N";
17621      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.MDLCOMP_VARIABLESET.
NOTE: The data set EMWS1.MDLCOMP_VARIABLESET has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\MdlComp\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17623      %let _HPDMGRIDHOST=;
17624      %let _HPDMGRIDINSTALLLOC=;
17625      %let _HPDMGRIDDATASERVER=;
17626      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* MdlComp : End update 
* datetime : 12DEC2019:15:50:41 
* 
*------------------------------------------------------------* 
17627      %let _emdsep = \;
17628      %em_getactionstatus(emlib =EMWS1, nodeid=MdlComp);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17629      %let em_Train = Y;
17630      %let em_Report = Y;
17631      %let em_Score = Y;
17632      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

17633      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17634      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17635      put '<Node Id="MdlComp" Event="Run" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Run" Pid="" Gridid=""/>';
17636      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17637      options sascmd="!sascmdv -nosyntaxcheck -noasynchio -noobjectserver";
MPRINT(EM_DIAGRAM):    options sascmd="!sascmdv -nosyntaxcheck -noasynchio -noobjectserver";
17638      %let SYSCC=0;
17639      signon C2XY07LL macvar=C2XY07LL;
MPRINT(EM_DIAGRAM):   signon macvar=C2XY07LL;
WARNING: TCP Access method tracing is enabled.
NOTE: Default SASCMD value being used is: "C:\Program Files\SASHome\SASFoundation\9.4\SAS.EXE" -nologo -noterminal -noxcmd -objectserver -objectserverparms "protocol=bridge dnsname=127.0.0.1 jcbp=61234" -sspi -secpackage NTLM  -xcmd.
NOTE: Remote signon to C2XY07LL commencing (SAS Release 9.04.01M3P062415).
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M3) 
      Licensed to UNIVERSITI MALAYA, Site 12600285.
NOTE: This session is executing on the X64_8PRO  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.1
      SAS/ETS 14.1
      SAS/OR 14.1
      SAS/IML 14.1
      SAS/QC 14.1

NOTE: Additional host information:

 X64_8PRO WIN 6.2.9200  Workstation

NOTE: SAS initialization used:
      real time           0.49 seconds
      cpu time            0.32 seconds
      
NOTE: Remote signon to C2XY07LL complete.
17640      rsubmit C2XY07LL wait=N persist=N  ;
MPRINT(EM_DIAGRAM):    rsubmit wait=N persist=N ;
The SAS System

NOTE: Background remote submit to C2XY07LL in progress.
NOTE: Remote submit to C2XY07LL commencing.
MPRINT(EM_DIAGRAM):   %global emexceptionstring emloopmode emloopnumber;
MPRINT(EM_DIAGRAM):   %let EMUSERID = %bquote(jy);
MPRINT(EM_DIAGRAM):   %let EMLDSPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\DataSources);
MPRINT(EM_DIAGRAM):   %let EMFLOWMODE = Y;
MPRINT(EM_DIAGRAM):   %let EMONODE = %bquote(MdlComp);
MPRINT(EM_DIAGRAM):   %let EMPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1);
MPRINT(EM_DIAGRAM):   %let EMWS = EMWS1;
MPRINT(EM_DIAGRAM):   %let EMNODECLASS = SASHELP.EMASSMT.ASSESS.CLASS;
MPRINT(EM_DIAGRAM):   %let EMSTATUSDIR = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\System);
MPRINT(EM_DIAGRAM):   %let EM_DEBUG =;
MPRINT(EM_DIAGRAM):   %let EMPROJECTCODE = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\System\STARTUP.sas);
MPRINT(EM_DIAGRAM):   %let EMSERVERCODE = %nrstr();
MPRINT(EM_DIAGRAM):   %let EM_USERID = %bquote(jy);
MPRINT(EM_DIAGRAM):   %let EM_METAHOST =;
MPRINT(EM_DIAGRAM):   %let EM_METAPORT =;
MPRINT(EM_DIAGRAM):   %let EM_JAVAPACKAGE = %bquote();
MPRINT(EM_DIAGRAM):   %let EMPROJECTPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project);
MPRINT(EM_DIAGRAM):   %let EMPROJNAME = %nrstr(SASEM_Project);
MPRINT(EM_DIAGRAM):   %let EMPROJPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject);
MPRINT(EM_DIAGRAM):   %let em_Train = Y;
MPRINT(EM_DIAGRAM):   %let em_Score = Y;
MPRINT(EM_DIAGRAM):   %let em_Report = Y;
MPRINT(EM_DIAGRAM):   %let emloopmode =;
MPRINT(EM_DIAGRAM):   %let emloopnumber =0;
MPRINT(EM_DIAGRAM):   %let emloopId =MdlComp;
MPRINT(EM_DIAGRAM):   %let emexceptionstring=;
MPRINT(EM_DIAGRAM):   options VBUFSIZE= 64M;
MPRINT(EM_DIAGRAM):   %em5run();
MPRINT(EM_DIAGRAM):   %put &&emexceptionstring;
MPRINT(EM_DIAGRAM):   %sysrput emerror_MdlComp = &&emexceptionstring;
MPRINT(EM_DIAGRAM):   %put &&emloopmode;
MPRINT(EM_DIAGRAM):   %sysrput emloopmode_MdlComp = &&emloopmode;
MPRINT(EM_DIAGRAM):   endrsubmit;
17641      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17642      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17643      put '<Node Id="MdlComp" Event="Run" Pid=" " Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Run" Pid=" " Gridid=""/>';
17644      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17645      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17646      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17647      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17648      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17649      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17650      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17651      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17652      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17653      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17654      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17655      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17656      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17657      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17658      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17659      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17660      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17661      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17662      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17663      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17664      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17665      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17666      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17667      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17668      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17669      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17670      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17671      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17672      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17673      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17674      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1     %global emexceptionstring emloopmode emloopnumber;
2     %let EMUSERID = %bquote(jy);
3     %let EMLDSPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\DataSources);
4     %let EMFLOWMODE = Y;
5     %let EMONODE = %bquote(MdlComp);
6     %let EMPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1);
7     %let EMWS = EMWS1;
8     %let EMNODECLASS = SASHELP.EMASSMT.ASSESS.CLASS;
9     %let EMSTATUSDIR = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\System);
10    %let EM_DEBUG =;
11    %let EMPROJECTCODE = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\System\STARTUP.sas);
12    %let EMSERVERCODE = %nrstr();
13    %let EM_USERID = %bquote(jy);
14    %let EM_METAHOST =;
15    %let EM_METAPORT =;
16    %let EM_JAVAPACKAGE = %bquote();
17    %let EMPROJECTPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject\SASEM_Project);
18    %let EMPROJNAME = %nrstr(SASEM_Project);
19    %let EMPROJPATH = %nrstr(C:\Users\jy\Desktop\DataMiningProject);
20    %let em_Train = Y;
21    %let em_Score = Y;
22    %let em_Report = Y;
23    %let emloopmode =;
24    %let emloopnumber =0;
25    %let emloopId =MdlComp;
26    %let emexceptionstring=;
27    options VBUFSIZE= 64M;
28    %em5run();

*------------------------------------------------------------* 
* 
* MdlComp : Running 
* datetime : 12DEC2019:15:50:43 
* 
*------------------------------------------------------------* 
6005   %let SYSCC =0;
6006   %let EMGROUPMODE =;
6007   %let EMGROUPID =;
12433  data work.MdlComp;
12434  set EMWS1.em_nodeid;
12435  where
12436  (NODEID="Tree2" and LABEL ne 'Decision Tree (Interactive, Include ALL)')
12437  OR (NODEID="Tree" and LABEL ne 'Decision Tree (Auto, Exclude SS)')
12438  ;
12439  run;

NOTE: There were 0 observations read from the data set EMWS1.EM_NODEID.
      WHERE ((NODEID='Tree2') and (LABEL not = 'Decision Tree (Interactive, Include ALL)')) or 
      ((NODEID='Tree') and (LABEL not = 'Decision Tree (Auto, Exclude SS)'));
NOTE: The data set WORK.MDLCOMP has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

12966  data EMWS1.MdlComp_EMTRAINVARIABLE;
12967  length NAME $64;
12968  set EMWS1.MdlComp_VariableSet;
12969  label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, NOQUOTE))" ROLE =
12969! "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
12969! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
12970     "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
12970! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
12971  label USE = "%sysfunc(sasmsg(sashelp.dmine, META_USE_VLABEL, NOQUOTE))";
12972  run;

NOTE: Variable ORDER is uninitialized.
NOTE: There were 1 observations read from the data set EMWS1.MDLCOMP_VARIABLESET.
NOTE: The data set EMWS1.MDLCOMP_EMTRAINVARIABLE has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

12973  %let emexceptionstring =;
*------------------------------------------------------------* 
* 
* MdlComp : End run 
* datetime : 12DEC2019:15:50:50 
* 
*------------------------------------------------------------* 
NOTE: The PROCEDURE DISPLAY printed pages 1-4.
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           7.45 seconds
      cpu time            5.10 seconds
      

12976   %put &&emexceptionstring;
 
12977   %sysrput emerror_MdlComp = &&emexceptionstring;
12978   %put &&emloopmode;
 
12979   %sysrput emloopmode_MdlComp = &&emloopmode;
NOTE: Remote submit to C2XY07LL complete.
NOTE: Remote signoff from C2XY07LL commencing.
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           8.08 seconds
      cpu time            5.45 seconds
      
NOTE: Remote signoff from C2XY07LL complete.
traverser_runingNode_note 
17675      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17676      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Node "MdlComp" ran. 
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\jy\Desktop\DataMiningProject\SASEM_Project\Workspaces\EMWS1\MdlComp\TRAINPROPERTIES.xml' encoding="UTF-8" NOBOM;
Node "MdlComp" succeeded. 
17678      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17679      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17680      put '<Node Id="MdlComp" Event="Complete" Pid="4452" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Complete" Pid="4452" Gridid=""/>';
17681      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-64GQI65,
      Local Host IP addr=fe80::90df:4d17:b66a:ac12%16,
      Peer Hostname Name=DESKTOP-64GQI65,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=61233,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Traverser: Run Completed 
NOTE: There are no active tasks/transactions.
17682      waitfor _all_ C2XY07LL;
MPRINT(EM_DIAGRAM):    waitfor _all_ C2XY07LL;
17683      signoff C2XY07LL;
MPRINT(EM_DIAGRAM):   signoff;
NOTE: A link to C2XY07LL does not exist.  SIGNOFF is not necessary.
17684      proc printto;
MPRINT(EM_DIAGRAM):   proc printto;
17685      run;
MPRINT(EM_DIAGRAM):   run;

